regexes_match_parse_html:
  - regex: 'error'
    version: 0
    err: "err" # Custom error message, return error message directly if the regular expression matches successfully
      #  text_attr_html: # Default text, can be omitted
      #    text: true

  - regex: '.*?'
    version: 1
    fields:
      last:
        selects:
          - '.a'
        nodes:
          last: true
      #  text_attr_html: # Default text, can be omitted
      #    text: true

      last1:
        selects:
          - '.aa'
        nodes:
          last: true

      text:
        selects:
          - '.b'

      first:
        selects:
          - '.a'
        nodes:
          first: true

      eq:
        selects:
          - '.a'
        nodes:
          eq: 0

      eeq:
        selects:
          - '.aa'
        nodes:
          eq: 0

      html:
        selects:
          - '.a'
        nodes:
          eq: 1
        text_attr_html:
          html: true

      replace:
        selects:
          - '.a'
        nodes:
          eq: 1
        data_format:
          replaces:
            - { from: "1", to: "!" }

      attr:
        selects:
          - '.a'
        nodes:
          eq: 1
        text_attr_html:
          attr: 'href'
        data_format:
          replaces:
            - { from: "\n", to: "!" }

      deletes:
        selects:
          - '.a'
        nodes:
          eq: 1
        text_attr_html:
          attr: 'href'
        data_format:
          deletes:
            - ' '
            - '\n'

      splits:
        selects:
          - '.f'
        data_format:
          splits:
            - { key: 'e', index: 0}
            - { key: 'dd', index: 1}

      asplits1:
        selects:
          - '.g'
        data_format:
          splits:
            - { key: '\n', index: 0}
            - { key: 'fff', index: 1}

      default_val_type:
        selects:
          - '.f'
        has:
          attr: 'href1dd'
        data_format:
          splits:
            - { key: 'e', index: 0}
            - { key: 'dd', index: 1}
        default_val_type: "str"

      default_val_type_vec:
        selects:
          - '.f'
        has:
          attr: 'href1dd'
        data_format:
          splits:
            - { key: 'e', index: 0 }
            - { key: 'dd', index: 1 }
        default_val_type: "vec"

      default_val_type_map:
        selects:
          - '.f'
        has:
          attr: 'href1dd'
        data_format:
          splits:
            - { key: 'e', index: 0 }
            - { key: 'dd', index: 1 }
        default_val_type: "map"

      has_attr_splits:
        selects:
          - '.f'
        nodes:
          eq: 1
        has:
          attr: 'href'
        data_format:
          splits:
            - { key: 'e', index: 0 }
            - { key: 'dd', index: 1 }
        default_val_type: "vec"

      each_fields:
        selects:
          - 'ul'
          - 'li'
        each:
          fields:
            aaaa:
              selects:
                - '.a'
            cccc:
              selects:
                - '.b'

      each:
        selects:
          - 'ul'
          - 'li'
        each:
          all:
            selects:
              - '.a'

      eq_selects:
        selects:
          - 'ul'
          - 'li'
        nodes:
          eq: 0
        select_params:
          selects:
            - '.a'

      parent:
        selects:
          - '.parent'
        nodes:
          parent: true

      children:
        selects:
          - '.children'
        nodes:
          children: true

      prev_sibling:
        selects:
          - '.children'
        nodes:
          prev_sibling: true

      next_sibling:
        selects:
          - '.children'
        nodes:
          next_sibling: true

      contains:
        selects:
          - '.children'
        contains:
          contains:
            text:
              - 'child'
              - 'ren'
          not_contains:
            text:
              - '1\n'
        default_val_type: 'str'